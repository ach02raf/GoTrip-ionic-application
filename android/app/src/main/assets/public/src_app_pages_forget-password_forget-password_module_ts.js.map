{"version":3,"file":"src_app_pages_forget-password_forget-password_module_ts.js","mappings":"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","sources":["./src/app/pages/forget-password/forget-password-routing.module.ts","./src/app/pages/forget-password/forget-password.module.ts","./src/app/pages/forget-password/forget-password.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ForgetPasswordPage } from './forget-password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgetPasswordPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ForgetPasswordPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { NgOtpInputModule } from 'ng-otp-input';\n\nimport { ForgetPasswordPageRoutingModule } from './forget-password-routing.module';\nimport { SwiperModule } from 'swiper/angular';\nimport { ForgetPasswordPage } from './forget-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ForgetPasswordPageRoutingModule,\n    SwiperModule,\n    NgOtpInputModule,\n  ],\n  declarations: [ForgetPasswordPage],\n})\nexport class ForgetPasswordPageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SwiperComponent } from 'swiper/angular';\r\nimport { SwiperOptions } from 'swiper';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { ModalComponent } from './modal/modal.component';\r\nimport { CodeModalComponent } from './code-modal/code-modal.component';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { VerificationService } from 'src/app/services/verification.service';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nconst ip = 'localhost';\r\n@Component({\r\n  selector: 'app-forget-password',\r\n  templateUrl: './forget-password.page.html',\r\n  styleUrls: ['./forget-password.page.scss'],\r\n})\r\nexport class ForgetPasswordPage implements OnInit {\r\n  @ViewChild('swiper', { static: false }) swiper?: SwiperComponent;\r\n\r\n  // configuration des inputs du code\r\n  configInput = {\r\n    length: 4,\r\n    placeholder: '#',\r\n    allowNumbersOnly: true,\r\n    inputStyles: {\r\n      width: '50px',\r\n      height: '50px',\r\n    },\r\n  };\r\n  phone: string = '';\r\n  isSubmitted = false;\r\n  EnterNumber: FormGroup;\r\n  NewPassword: FormGroup;\r\n  errors = [\r\n    { type: 'required', message: 'Champ Obligatoire !' },\r\n    { type: 'pattern', message: 'Vérifier le format du champ' },\r\n  ];\r\n  //afficher la valeur des input du code dans le console\r\n  //vérifier le code et aller à la page new password\r\n\r\n  //config swiper\r\n  config: SwiperOptions = {\r\n    slidesPerView: 1, //par défaut 1\r\n    pagination: false,\r\n    enabled: true,\r\n  };\r\n\r\n  slideNext() {\r\n    this.swiper.swiperRef.slideNext(100);\r\n  }\r\n  slidePrev() {\r\n    this.swiper.swiperRef.slidePrev(100);\r\n  }\r\n\r\n  get errorControl() {\r\n    return this.EnterNumber.controls;\r\n  }\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private Verificationservice: VerificationService,\r\n    private router: Router\r\n  ) {}\r\n  num: number;\r\n\r\n  ngOnInit() {\r\n    this.EnterNumber = this.formBuilder.group({\r\n      phone: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.pattern('^\\\\d{8}$'),\r\n          Validators.maxLength(8),\r\n        ],\r\n      ],\r\n    });\r\n  }\r\n  message = 'test';\r\n\r\n  verifNum() {\r\n    this.Verificationservice.verificationphone(\r\n      this.EnterNumber.value['phone']\r\n    ).subscribe(\r\n      async (res) => {\r\n        const navigationExtras: NavigationExtras = {\r\n          state: {\r\n            num: this.EnterNumber.value['phone'],\r\n          },\r\n        };\r\n        await this.router.navigate(['/codeModal'], navigationExtras);\r\n      },\r\n      async (err) => {\r\n        const navigationExtras: NavigationExtras = {\r\n          state: {\r\n            num: this.EnterNumber.value['phone'],\r\n          },\r\n        };\r\n        await this.router.navigate(['/errorModal'], navigationExtras);\r\n      }\r\n    );\r\n  }\r\n\r\n  //on submit phone\r\n  onSubmit() {\r\n    this.isSubmitted = true;\r\n    if (!this.EnterNumber.valid) {\r\n      console.log('Please provide all the required values!');\r\n      console.log(this.config);\r\n      return false;\r\n    } else {\r\n      this.verifNum();\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}