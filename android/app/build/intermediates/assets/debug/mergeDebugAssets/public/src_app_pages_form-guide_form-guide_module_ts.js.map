{"version":3,"file":"src_app_pages_form-guide_form-guide_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEL;AAElD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAa;KACzB;CACF,CAAC;IAMW,0BAA0B,SAA1B,0BAA0B;;AAA1B,0BAA0B;IAJtC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,0BAA0B;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBE;AACM;AACmB;AACrB;AAE4B;AAEvB;IAYrC,mBAAmB,SAAnB,mBAAmB;;AAAnB,mBAAmB;IAV/B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,kFAA0B;YAC1B,+DAAmB;SACpB;QACD,YAAY,EAAE,CAAC,2DAAa,CAAC;KAC9B,CAAC;GACW,mBAAmB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACnBkB;AACkB;AAC3B;AACQ;IAOpC,aAAa,SAAb,aAAa;IAExB,YACU,WAAwB,EACxB,KAAa,EACb,eAAgC;QAFhC,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAQ;QACb,oBAAe,GAAf,eAAe,CAAiB;QAG1C,YAAO,GAAW,EAAE,CAAC;QACrB,gBAAW,GAAG,KAAK,CAAC;QACpB,WAAM,GAAG;YACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,qBAAqB,EAAE;YACpD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,6BAA6B,EAAE;SAC5D,CAAC;IAPC,CAAC;IAQJ,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,OAAO,EAAE;gBACP,EAAE;gBACF;oBACE,+DAAmB;oBACnB,kEAAkE;iBACnE;aACF;SACF,CAAC,CAAC;IACL,CAAC;IACD,aAAa;QACX,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACxB,MAAM,YAAY,GAAG,yCAAyC,CAAC;YAC/D,MAAM,WAAW,GAAG,uBAAuB,CAAC;YAC5C,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;YAC7C,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAClC;IACH,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAChC,CAAC;IACD,wBAAwB;IAClB,YAAY,CAAC,WAAW,EAAE,YAAY;;YAC1C,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,WAAW;gBACnB,SAAS,EAAE,EAAE;gBACb,OAAO,EAAE,YAAY;gBACrB,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,sBAAsB,EAAE,CAAC;gBAC3D,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;;;;;;;AAnDU,aAAa;IALzB,wDAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,uEAAqC;;KAEtC,CAAC;GACW,aAAa;AAAA","sources":["./src/app/pages/form-guide/form-guide-routing.module.ts","./src/app/pages/form-guide/form-guide.module.ts","./src/app/pages/form-guide/form-guide.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FormGuidePage } from './form-guide.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FormGuidePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FormGuidePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { FormGuidePageRoutingModule } from './form-guide-routing.module';\r\n\r\nimport { FormGuidePage } from './form-guide.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    FormGuidePageRoutingModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [FormGuidePage],\r\n})\r\nexport class FormGuidePageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-form-guide',\r\n  templateUrl: './form-guide.page.html',\r\n  styleUrls: ['./form-guide.page.scss'],\r\n})\r\nexport class FormGuidePage implements OnInit {\r\n  guidForm: FormGroup;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: Router,\r\n    private alertController: AlertController\r\n  ) {}\r\n\r\n  adresse: String = '';\r\n  isSubmitted = false;\r\n  errors = [\r\n    { type: 'required', message: 'Champ Obligatoire !' },\r\n    { type: 'pattern', message: 'VÃ©rifier le format du champ' },\r\n  ];\r\n  ngOnInit() {\r\n    this.guidForm = this.formBuilder.group({\r\n      adresse: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          // Validators.pattern('^[A-Za-z][A-Za-z0-9]*(?:_[A-Za-z0-9]+)*$'),\r\n        ],\r\n      ],\r\n    });\r\n  }\r\n  SubmitRequest() {\r\n    this.isSubmitted = true;\r\n    if (!this.guidForm.valid) {\r\n      const alertMessage = 'Please provide all the required values!';\r\n      const alertHeader = 'Missing Informations!';\r\n      this.presentAlert(alertHeader, alertMessage);\r\n      return false;\r\n    } else {\r\n      console.log(this.guidForm.value);\r\n    }\r\n  }\r\n\r\n  get errorControl() {\r\n    return this.guidForm.controls;\r\n  }\r\n  // alertMessage: String;\r\n  async presentAlert(alertHeader, alertMessage) {\r\n    const alert = await this.alertController.create({\r\n      header: alertHeader,\r\n      subHeader: '',\r\n      message: alertMessage,\r\n      buttons: [{ text: 'OK', cssClass: 'alert-button-confirm' }],\r\n      animated: true,\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}